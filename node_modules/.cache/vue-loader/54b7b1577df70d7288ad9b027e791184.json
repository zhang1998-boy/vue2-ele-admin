{"remainingRequest":"/Users/zhangpeng/Desktop/workspace/zt-fill-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangpeng/Desktop/workspace/zt-fill-web/src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=less","dependencies":[{"path":"/Users/zhangpeng/Desktop/workspace/zt-fill-web/src/App.vue","mtime":1718631629338},{"path":"/Users/zhangpeng/Desktop/workspace/zt-fill-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangpeng/Desktop/workspace/zt-fill-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhangpeng/Desktop/workspace/zt-fill-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhangpeng/Desktop/workspace/zt-fill-web/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangpeng/Desktop/workspace/zt-fill-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangpeng/Desktop/workspace/zt-fill-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hbnQtbW9kYWwtbWFzayB7CiAgcG9zaXRpb246IGZpeGVkOwogIHRvcDogMDsKICByaWdodDogMDsKICBib3R0b206IDA7CiAgbGVmdDogMDsKICB6LWluZGV4OiAxMDAwOwogIGhlaWdodDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMikgIWltcG9ydGFudDsKICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9NTApOwp9CiogewogIHBhZGRpbmc6IDA7CiAgbWFyZ2luOiAwOwp9CgojYXBwIHsKICBmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmOwogIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkOwogIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7CiAgZm9udC1zaXplOiAxNnB4Owp9Cgpib2R5IHsKICAvLyBiYWNrZ3JvdW5kOiAjZWVmMmY4OwogIC8qIOiuvue9ruS9oOimgeeahOiDjOaZr+iJsiAqLwogIG92ZXJmbG93OiBoaWRkZW47Cn0KLmxpZ2h0IHsKICBiYWNrZ3JvdW5kOiAjZWVmMmY4ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <a-config-provider :locale=\"locale\">\n    <div id=\"app\" :class=\"appMode === 'dark' ? 'dark' : 'light'\">\n      <router-view />\n    </div>\n  </a-config-provider>\n</template>\n<script>\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/zh-cn\";\nimport zhCN from \"ant-design-vue/lib/locale-provider/zh_CN\";\nimport { useDark, useToggle } from \"@vueuse/core\";\nimport Cookies from \"js-cookie\";\nimport { getUserDetail } from \"@/utils/tool\";\nimport { getDomain } from \"@/utils/cookieOprtate\";\n\ndayjs.locale(\"zh-cn\");\n\nexport default {\n  data() {\n    return {\n      checked: null,\n      locale: zhCN,\n    };\n  },\n  computed: {\n    appMode() {\n      return localStorage.getItem(\"mode\");\n    },\n    // checked () {\n    //   let mode = localStorage.getItem('mode')\n    //   return mode === 'dark' ? true : false\n    // }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      let domian = getDomain();\n      let hasToken = Cookies.get(\"user_token\", { domain: domian });\n      if (hasToken) {\n        getUserDetail();\n      }\n    });\n  },\n  created() {\n    // let mode = localStorage.getItem('mode')\n    // mode === 'dark' ? this.checked = true : false\n  },\n  methods: {\n    changeMode() {\n      if (!this.checked) {\n        localStorage.removeItem(\"mode\");\n      }\n      this.$store.dispatch(\"changeMOde\", this.checked ? \"dark\" : \"light\");\n      localStorage.setItem(\"mode\", this.checked ? \"dark\" : \"light\");\n      const routerPath = this.$router.resolve({\n        path: \"/registration/register\",\n      });\n      setTimeout(window.open(routerPath.href, \"_blank\"), 100);\n\n      // // let isDark = this.isDark()\n      // useToggle(isDark)\n    },\n    isDark() {\n      const html = document.documentElement;\n      const link = document.createElement(\"link\");\n      link.rel = \"stylesheet\";\n      link.type = \"text/css\";\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.appendChild(link);\n      let a = useDark({\n        selector: \"html\",\n        attribute: \"data-doc-theme\",\n        valueDark: \"dark\",\n        valueLight: \"light\",\n        onChanged(dark) {\n          if (dark) {\n            document.body.setAttribute(\"data-theme\", \"dark\");\n            html.setAttribute(\"data-doc-theme\", \"dark\");\n            html.style.colorScheme = \"dark\";\n            link.href = \"/style/dark.css\";\n          } else {\n            document.body.setAttribute(\"data-theme\", \"light\");\n            html.setAttribute(\"data-doc-theme\", \"light\");\n            html.style.colorScheme = \"light\";\n            link.href = \"\";\n          }\n        },\n      });\n      return a;\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n.ant-modal-mask {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1000;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.2) !important;\n  filter: alpha(opacity=50);\n}\n* {\n  padding: 0;\n  margin: 0;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-size: 16px;\n}\n\nbody {\n  // background: #eef2f8;\n  /* 设置你要的背景色 */\n  overflow: hidden;\n}\n.light {\n  background: #eef2f8 !important;\n}\n</style>\n"]}]}